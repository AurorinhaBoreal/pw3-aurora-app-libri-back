name: Build and Check Project

on: [push, pull_request]

jobs:
  Build:
    runs-on: ubuntu-latest

    env:
      MYSQL_ROOT_PASSWORD: "libraryPassword"
      MYSQL_DATABASE: "library_db"
      MYSQL_USER: "libraryUser"
      MYSQL_PASSWORD: "libraryPassword"
      DB_HOST: 'localhost'

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install docker-compose -y

    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install

    - name: Start MySQL and wait for health check
      run: |
        docker-compose up -d db
        for i in {1..60}; do
          if [ "$(docker inspect -f '{{.State.Health.Status}}' project-database)" == "healthy" ]; then
            echo "MySQL container is healthy!"
            break
          fi
          echo "Waiting for MySQL container to be healthy..."
          sleep 5
        done

    - name: Initialize database
      run: |
        docker-compose exec -T db mysql -uroot -p${ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${DB_NAME};"

    - name: Run ESLint
      run: npm run lint

    - name: Shut down services
      run: docker-compose down
      if: always()
